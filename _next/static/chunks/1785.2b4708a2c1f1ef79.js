"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1785],{21785:function(e,t,a){a.r(t),a.d(t,{ccipRequest:function(){return k},offchainLookup:function(){return g},offchainLookupAbiItem:function(){return w},offchainLookupSignature:function(){return m}});var s=a(14931),n=a(96070),r=a(36117),o=a(29008);class c extends r.G{constructor({callbackSelector:e,cause:t,data:a,extraData:s,sender:n,urls:r}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(e=>`    ${(0,o.G)(e)}`)],`  Sender: ${n}`,`  Data: ${a}`,`  Callback selector: ${e}`,`  Extra data: ${s}`].flat(),name:"OffchainLookupError"})}}class i extends r.G{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.G)(t)}`,`Response: ${(0,n.P)(e)}`],name:"OffchainLookupResponseMalformedError"})}}class u extends r.G{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}var f=a(78863),d=a(86899),p=a(45444),l=a(61228),h=a(57040),y=a(15102);let m="0x556f1830",w={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function g(e,{blockNumber:t,blockTag:a,data:n,to:r}){let{args:o}=(0,d.p)({data:n,abi:[w]}),[i,f,y,m,g]=o,{ccipRead:b}=e,G=b&&"function"==typeof b?.request?b.request:k;try{if(!(0,l.E)(r,i))throw new u({sender:i,to:r});let n=await G({data:y,sender:i,urls:f}),{data:o}=await (0,s.R)(e,{blockNumber:t,blockTag:a,data:(0,h.zo)([m,(0,p.E)([{type:"bytes"},{type:"bytes"}],[n,g])]),to:r});return o}catch(e){throw new c({callbackSelector:m,cause:e,data:n,extraData:g,sender:i,urls:f})}}async function k({data:e,sender:t,urls:a}){let s=Error("An unknown error occurred.");for(let r=0;r<a.length;r++){let o=a[r],c=o.includes("{data}")?"GET":"POST",u="POST"===c?{data:e,sender:t}:void 0,d="POST"===c?{"Content-Type":"application/json"}:{};try{let a;let r=await fetch(o.replace("{sender}",t).replace("{data}",e),{body:JSON.stringify(u),headers:d,method:c});if(a=r.headers.get("Content-Type")?.startsWith("application/json")?(await r.json()).data:await r.text(),!r.ok){s=new f.Gg({body:u,details:a?.error?(0,n.P)(a.error):r.statusText,headers:r.headers,status:r.status,url:o});continue}if(!(0,y.v)(a)){s=new i({result:a,url:o});continue}return a}catch(e){s=new f.Gg({body:u,details:e.message,url:o})}}throw s}}}]);